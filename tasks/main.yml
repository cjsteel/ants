---
# tasks file for ansible-role-acemenu

- debug: var=fact_role_path

- name: "  debug: var=user_homes"
  debug: var=acemenu_user_homes
  when: ansible_distribution == "Ubuntu" and acemenu_install_type_user is defined and acemenu_install_type_user == True

- name: "ensure for remote users bin-acemenu directory"
  become: True
  file:
    state : 'directory'
    path  : '{{ item.value.home }}/{{ acemenu_bin_dir }}'
    owner : '{{ item.value.owner }}'
    group : '{{ item.value.group }}'
    mode  : '{{ item.value.mode }}'
  with_dict: "{{ acemenu_user_homes }}"
  when: ansible_distribution == "Ubuntu" and acemenu_install_type_user == True

# ensure helpfiles dir

- name: "ensure for remote users bin/acemenu/helpfiles directory"
  become: True
  file   :
    state   : 'directory'
    path    : '{{ item.value.home }}/{{ acemenu_help_dir }}'
    owner   : '{{ item.value.owner }}'
    group   : '{{ item.value.group }}'
    mode    : '{{ item.value.mode }}'
  with_dict: '{{ acemenu_user_homes }}'
  when: ansible_distribution == "Ubuntu" and acemenu_install_type_user == True

# ensure for menu.sh script

- name: "when ansible_distribution == Ubuntu, template our menu script"
  become: True
  template :
    backup   : yes
    src      : '{{ ansible_distribution }}/{{ ansible_distribution_version }}/acemenu/menu.sh.j2'
    dest     : '{{ item.value.home }}/{{ acemenu_bin_dir }}/menu.sh'
    owner    : '{{ item.value.owner }}'
    group    : '{{ item.value.group }}'
    mode     : '{{ item.value.mode }}'
  with_dict: '{{ acemenu_user_homes }}'
  when: ansible_distribution == "Ubuntu" and acemenu_install_type_user == True

# Ubuntu - template menu items

- name: 'when ansible_distribution == "Ubuntu", template our menu items'
  become: True
  template:
    backup  : yes
    src     : '{{ ansible_distribution }}/{{ ansible_distribution_version }}/acemenu/menuitems.j2'
    dest    : '{{ item.value.home }}/{{ acemenu_bin_dir }}/menuitems.txt'
    owner   : '{{ item.value.owner }}'
    group   : '{{ item.value.group }}'
    mode    : '{{ item.value.mode }}'
  with_dict : '{{ acemenu_user_homes }}'
  when: ansible_distribution == "Ubuntu" and acemenu_install_type_user == True

# CentOS - template menu items

- name: 'when ansible_distribution == "CentOS", template our menu items'
  become: True
  template:
    backup  : yes
    src     : '{{ ansible_distribution }}/{{ ansible_distribution_major_version }}/acemenu/menuitems.j2'
    dest    : '{{ item.value.home }}/{{ acemenu_bin_dir }}/menuitems.txt'
    owner   : '{{ item.value.owner }}'
    group   : '{{ item.value.group }}'
    mode    : '{{ item.value.mode }}'
  with_dict: "{{ acemenu_user_homes }}"
  when: ansible_distribution == "CentOS" and acemenu_install_type_user == True

# CentOS helpfiles

- name: 'copy over our CentOS help files'
  become: True
  copy:
    backup  : no
    force   : yes # overwrites any existing file(s).
    src     : 'templates/{{ ansible_distribution }}/{{ ansible_distribution_major_version }}/acemenu/helpfiles/'
    dest    : '{{ item.value.home }}/{{ acemenu_bin_dir }}/helpfiles/'
    owner   : '{{ item.value.owner }}'
    group   : '{{ item.value.group }}'
    mode    : '{{ item.value.mode }}'
  with_dict : "{{ acemenu_user_homes }}"
  when: ansible_distribution == "CentOS" and acemenu_install_type_user == True

# Ubuntu helpfiles

- name: 'copy over our Ubuntu help files'
  become: True
  copy:
    directory_mode : yes
    backup  : no
    force   : yes # overwrites any existing file(s)
    src     : 'templates/{{ ansible_distribution }}/{{ ansible_distribution_version }}/acemenu/helpfiles/'
    dest    : '{{ item.value.home }}/{{ acemenu_bin_dir }}/helpfiles/'
    owner   : '{{ item.value.owner }}'
    group   : '{{ item.value.group }}'
    mode    : '{{ item.value.mode }}'
  with_dict : "{{ acemenu_user_homes }}"
  when: ansible_distribution == "Ubuntu" and acemenu_install_type_user == True

# Create menu symlink

- name: "Create symlink ~/bin/menu that points to ~/bin/acemenu/menu.sh"
  become: True
  command: ln -s acemenu/menu.sh menu
  args:
    chdir  : '/etc/skel/bin'
    creates: '/etc/skel/bin/menu'
  when: ansible_distribution == "Ubuntu"
# Create menu symlink

#- name: "Create symlink ~/bin/menu that points to ~/bin/acemenu/menu.sh"
#  become: True
#  file:
#    state : 'link'
#    src   : '{{ item.value.home }}/{{ acemenu_bin_dir }}/menu.sh'
#    dest  : '{{ item.value.home }}/{{ acemenu_personal_bin }}/menu'
#    owner : '{{ item.value.owner }}'
#    group : '{{ item.value.group }}'
#    mode  : '{{ item.value.mode }}'
#  with_dict : "{{ acemenu_user_homes }}"
#  when: ansible_distribution == "Ubuntu" and acemenu_install_type_user == True

# Configuration files

# .bashrc
#
# Currently if the user does not have a .bashrc this module fails in order to aid in the identification
# of issues where 'non-standard/regular' users have been setup on the target host.

#- name: "ensure for our path block in ~/.bashrc"
#  become: true
#  blockinfile:
#    dest    : '{{ item.value.home }}/.bashrc'
#    owner   : '{{ item.value.owner }}'
#    group   : '{{ item.value.group }}'
#    mode    : '{{ item.value.mode }}'
#    state   : 'present'
#    insertafter: EOF
#    marker: '# {mark} ANSIBLE MANAGED BLOCK'
#    block: |
#      # set PATH to include '{{ item.value.home }}/{{ acemenu_bin_dir }}'
#      if [ -d {{ item.value.home }}/{{ acemenu_bin_dir }} ] ; then
#         PATH={{ item.value.home }}/{{ acemenu_bin_dir }}:${PATH} 
#      fi
#  with_dict: "{{ acemenu_user_homes }}"
#  when: ansible_distribution == "Ubuntu" 

# if the above did not fail and halt execution then we will create ~/.bash_aliases
# and an entry for it in ~/.bashrc

#- name: "CentOS - ensure for ~/.bash_aliases source in ~/.bashrc"
#  become: true
#  blockinfile:
#    dest    : '{{ item.value.home }}/.bashrc'
#    owner   : '{{ item.value.owner }}'
#    group   : '{{ item.value.group }}'
#    mode    : '{{ item.value.mode }}'
#    state   : 'present'
#    insertafter: EOF
#    marker: '# {mark} ANSIBLE MANAGED BLOCK'
#    block: |
#      # add source ~/.bash_aliases to ~/.bashrc
#      #
#      if [ -f ~/.bash_aliases ]; then
#          . ~/.bash_aliases
#      fi
#      # set PATH to include '{{ item.value.home }}/{{ acemenu_bin_dir }}'
#      if [ -d {{ item.value.home }}/{{ acemenu_bin_dir }} ] ; then
#         PATH={{ item.value.home }}/{{ acemenu_bin_dir }}:${PATH} 
#      fi
#  with_dict: "{{ acemenu_user_homes }}"
#  when: ansible_distribution == "CentOS" 

- name: "ensure for ~/.bash_aliases"
  become: True
  file:
    state   : 'touch'
    path    : '{{ item.value.home }}/.bash_aliases'
    owner   : '{{ item.value.owner }}'
    group   : '{{ item.value.group }}'
    mode    : '{{ item.value.mode }}'
  with_dict: "{{ acemenu_user_homes }}"
  when: ansible_distribution == "Ubuntu" and acemenu_install_type_user == True

- name: "ensure for menu message block in ~/.bash_aliases"
  become: True
  blockinfile:
    dest    : '{{ item.value.home }}/.bash_aliases'
    owner   : '{{ item.value.owner }}'
    group   : '{{ item.value.group }}'
    mode    : '0644'
    create  : 'yes'
    state   : 'present'
    marker: '# {mark} ANSIBLE MANAGED BLOCK'
    insertafter: EOF
    block: |
      alias aceactivate='source activate ansible-1.9.0.1'
  with_dict: "{{ acemenu_user_homes }}"
  when: ansible_distribution == "Ubuntu" and acemenu_install_type_user == True


