---
# tasks file for ansible-role-acemenu

- name: "get remote systems users by UID range"
  shell: >
    awk -F':' -v "min={{ acemenu_uid_min }}" -v "max={{ acemenu_uid_max }}" '{ if ( $3 >= min && $3 <= max ) print $0}' /etc/passwd | cut -d: -f1
  changed_when: false
  register: users_by_range

- name: "debug: var=users_by_range"
  debug: var=users_by_range

- name: "debug: var=users_by_range.stdout_lines"
  debug: var=users_by_range.stdout_lines

# discover home directories including those mounted by LDAP

- name: "discover home directories including those mounted by LDAP"
  shell: >
    getent passwd {{ item }} | cut -d: -f6
  changed_when: false
  register: user_homes
  with_items: users_by_range.stdout_lines
#  with_items: acemenu_users

- name: 'Debug: msg="item.item={{item.item}}, item.stdout={{item.stdout}}, item.changed={{item.changed}}'
  debug: msg="item.item={{item.item}}, item.stdout={{item.stdout}}, item.changed={{item.changed}}"
  with_items: "{{user_homes.results}}"

- name: "  debug: var=user_homes"
  debug: var=user_homes.results

- name: "ensure for remote users bin/acemenu directory"
  become: true
  file:
    state='directory'
    path='{{ item.stdout }}/{{ acemenu_bin_dir }}'
    owner='{{ item.stdout | basename }}'
    group='{{ item.stdout | basename }}'
    mode=0775
  with_items: "{{ user_homes.results }}"

- name: "ensure for remote users bin/acemenu/helpfiles directory"
  become: true
  file:
    state='directory'
    path='{{ item.stdout }}/{{ acemenu_help_dir }}'
    owner='{{ item.stdout | basename }}'
    group='{{ item.stdout | basename }}'
    mode=0775
  with_items: "{{ user_homes.results }}"

#  file: path=/etc/foo.conf owner=foo group=foo mode=0644


- name: 'when ansible_distribution == "CentOS", template our menu script'
  become: true
  template:
    backup  : yes
    src     : '{{ ansible_distribution }}/{{ ansible_distribution_major_version }}/acemenu/menu.j2'
    dest    : '{{ item.stdout }}/{{ acemenu_bin_dir }}/menu'
    owner   : '{{ item.stdout | basename }}'
    group   : '{{ item.stdout | basename }}'
    mode    : '0740'
  with_items: "{{ user_homes.results }}"
  when: ansible_distribution == "CentOS" 

- name: 'when ansible_distribution == "Ubuntu", template our menu script'
  become: true
#  become: '{{ item.stdout | basename }}'
  template:
    backup  : yes
    src     : '{{ ansible_distribution }}/{{ ansible_distribution_version }}/acemenu/menu.j2'
    dest    : '{{ item.stdout }}/{{ acemenu_bin_dir }}/menu'
    owner   : '{{ item.stdout | basename }}'
    group   : '{{ item.stdout | basename }}'
    mode    : '0740'
  with_items: "{{ user_homes.results }}"
  when: ansible_distribution == "Ubuntu" 

- name: 'when ansible_distribution == "Ubuntu", template our menu items'
  become: true
  template:
    backup  : yes
    src     : '{{ ansible_distribution }}/{{ ansible_distribution_version }}/acemenu/menuitems.j2'
    dest    : '{{ item.stdout }}/{{ acemenu_bin_dir }}/menuitems.txt'
    owner   : '{{ item.stdout | basename }}'
    group   : '{{ item.stdout | basename }}'
    mode    : '0640'
  with_items: "{{ user_homes.results }}"
  when: ansible_distribution == "Ubuntu" 

- name: 'when ansible_distribution == "CentOS", template our menu items'
  become: true
  template:
    backup  : yes
    src     : '{{ ansible_distribution }}/{{ ansible_distribution_major_version }}/acemenu/menuitems.j2'
    dest    : '{{ item.stdout }}/{{ acemenu_bin_dir }}/menuitems.txt'
    owner   : '{{ item.stdout | basename }}'
    group   : '{{ item.stdout | basename }}'
    mode    : '0640'
  with_items: "{{ user_homes.results }}"
  when: ansible_distribution == "CentOS" 

# helpfiles

- name: 'copy over our help files'
  become: true
  copy:
    backup  : no
    force   : yes # overwrites any existing file(s).
    src     : 'templates/{{ ansible_distribution }}/{{ ansible_distribution_major_version }}/acemenu/helpfiles/'
    dest    : '{{ item.stdout }}/{{ acemenu_bin_dir }}/helpfiles/'
    owner   : '{{ item.stdout | basename }}'
    group   : '{{ item.stdout | basename }}'
    mode    : '0640'
  with_items: "{{ user_homes.results }}"
  when: ansible_distribution == "CentOS"

- name: 'copy over our help files'
  become: true
  copy:
    directory_mode : yes
    backup  : no
    force   : yes # overwrites any existing file(s)
    src     : 'templates/{{ ansible_distribution }}/{{ ansible_distribution_version }}/acemenu/helpfiles/'
    dest    : '{{ item.stdout }}/{{ acemenu_bin_dir }}/helpfiles/'
    owner   : '{{ item.stdout | basename }}'
    group   : '{{ item.stdout | basename }}'
    mode    : '0640'
  with_items: "{{ user_homes.results }}"
  when: ansible_distribution == "Ubuntu"

# .bashrc
#
# Currently if the user does not have a .bashrc this module fails in order to aid in the identification
# of issues where 'non-standard/regular' users have been setup on the target host.

- name: "ensure for our path block in ~/.bashrc"
  become: true
  blockinfile:
    dest: '{{ item.stdout }}/.bashrc'
    owner   : '{{ item.stdout | basename }}'
    group   : '{{ item.stdout | basename }}'
    mode    : '0644'
    state   : 'present'
    insertafter: EOF
    marker: '# {mark} ANSIBLE MANAGED BLOCK'
    block: |
      # set PATH to include '{{ item.stdout }}/{{ acemenu_bin_dir }}'
      if [ -d {{ item.stdout }}/{{ acemenu_bin_dir }} ] ; then
         PATH={{ item.stdout }}/{{ acemenu_bin_dir }}:${PATH} 
      fi
  with_items: "{{ user_homes.results }}"
  when: ansible_distribution == "Ubuntu" 

# if the above did not fail and halt execution then we will create ~/.bash_aliases
# and an entry for it in ~/.bashrc

- name: "ensure for ~/.bash_aliases source in ~/.bashrc"
  become: true
  blockinfile:
    dest: '{{ item.stdout }}/.bashrc'
    owner   : '{{ item.stdout | basename }}'
    group   : '{{ item.stdout | basename }}'
    mode    : '0644'
    state   : 'present'
    insertafter: EOF
    marker: '# {mark} ANSIBLE MANAGED BLOCK'
    block: |
      # add source ~/.bash_aliases to ~/.bashrc
      #
      if [ -f ~/.bash_aliases ]; then
          . ~/.bash_aliases
      fi
      # set PATH to include '{{ item.stdout }}/{{ acemenu_bin_dir }}'
      if [ -d {{ item.stdout }}/{{ acemenu_bin_dir }} ] ; then
         PATH={{ item.stdout }}/{{ acemenu_bin_dir }}:${PATH} 
      fi
  with_items: "{{ user_homes.results }}"
  when: ansible_distribution == "CentOS" 

- name: "ensure for ~/.bash_aliases"
  become: true
  file:
    state   : 'touch'
    path    : '{{ item.stdout }}/.bash_aliases'
    owner   : '{{ item.stdout | basename }}'
    group   : '{{ item.stdout | basename }}'
    mode    : '0644'
  with_items: "{{ user_homes.results }}"

- name: "ensure for menu message block in ~/.bash_aliases"
  become: true
  blockinfile:
    dest: '{{ item.stdout }}/.bash_aliases'
    owner   : '{{ item.stdout | basename }}'
    group   : '{{ item.stdout | basename }}'
    mode    : '0644'
    create  : 'yes'
    state   : 'present'
    marker: '# {mark} ANSIBLE MANAGED BLOCK'
    insertafter: EOF
    block: |
      alias aceactivate='source activate ansible-1.9.0.1'
  with_items: "{{ user_homes.results }}"
